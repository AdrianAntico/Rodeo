% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FeatureEngineering_ModelBased.R
\name{AutoWord2VecScoring}
\alias{AutoWord2VecScoring}
\title{AutoWord2VecScoring}
\usage{
AutoWord2VecScoring(
  data,
  BuildType = "individual",
  ModelObject = NULL,
  ModelID = "Model_1",
  model_path = NULL,
  stringCol = NULL,
  KeepStringCol = FALSE,
  H2OStartUp = TRUE,
  H2OShutdown = TRUE,
  Threads = max(1L, parallel::detectCores() - 2L),
  MaxMemory = "28G"
)
}
\arguments{
\item{data}{data.table}

\item{BuildType}{"individual" or "combined". Used to locate model in file}

\item{ModelObject}{NULL if you want it loaded in the function}

\item{ModelID}{Same as in training}

\item{model_path}{Location of model}

\item{stringCol}{Columns to transform}

\item{KeepStringCol}{FALSE to remove string col after creating vectors}

\item{H2OStartUp}{= TRUE,}

\item{Threads}{max(1L, parallel::detectCores() - 2L)}

\item{MaxMemory}{"28G"}
}
\description{
AutoWord2VecScoring is for scoring models generated by AutoWord2VecModeler()
}
\examples{
\dontrun{
# Create fake data
data <- AutoQuant::FakeDataGenerator(
  Correlation = 0.70,
  N = 1000L,
  ID = 2L,
  FactorCount = 2L,
  AddDate = TRUE,
  AddComment = TRUE,
  ZIP = 2L,
  TimeSeries = FALSE,
  ChainLadderData = FALSE,
  Classification = FALSE,
  MultiClass = FALSE)

# Create Model and Vectors
data <- AutoQuant::AutoWord2VecModeler(
  data,
  BuildType = "individual",
  stringCol = c("Comment"),
  KeepStringCol = FALSE,
  ModelID = "Model_1",
  model_path = getwd(),
  vects = 10,
  MinWords = 1,
  WindowSize = 1,
  Epochs = 25,
  SaveModel = "standard",
  Threads = max(1,parallel::detectCores()-2),
  MaxMemory = "28G")

# Remove data
rm(data)

# Create fake data for mock scoring
data <- AutoQuant::FakeDataGenerator(
  Correlation = 0.70,
  N = 1000L,
  ID = 2L,
  FactorCount = 2L,
  AddDate = TRUE,
  AddComment = TRUE,
  ZIP = 2L,
  TimeSeries = FALSE,
  ChainLadderData = FALSE,
  Classification = FALSE,
  MultiClass = FALSE)

# Create vectors for scoring
data <- AutoQuant::AutoWord2VecScoring(
  data,
  BuildType = "individual",
  ModelObject = NULL,
  ModelID = "Model_1",
  model_path = getwd(),
  stringCol = "Comment",
  KeepStringCol = FALSE,
  H2OStartUp = TRUE,
  H2OShutdown = TRUE,
  Threads = max(1L, parallel::detectCores() - 2L),
  MaxMemory = "28G")
}

}
\seealso{
Other Feature Engineering: 
\code{\link{Apply_Asinh}()},
\code{\link{Apply_Asin}()},
\code{\link{Apply_BoxCox}()},
\code{\link{Apply_LogPlus1}()},
\code{\link{Apply_Logit}()},
\code{\link{Apply_Log}()},
\code{\link{Apply_Sqrt}()},
\code{\link{Apply_YeoJohnson}()},
\code{\link{AutoDataPartition}()},
\code{\link{AutoDiffLagN}()},
\code{\link{AutoInteraction}()},
\code{\link{AutoLagRollMode}()},
\code{\link{AutoLagRollStatsScoring}()},
\code{\link{AutoLagRollStats}()},
\code{\link{AutoTransformationCreate}()},
\code{\link{AutoTransformationScore}()},
\code{\link{AutoWord2VecModeler}()},
\code{\link{CategoricalEncoding}()},
\code{\link{CreateCalendarVariables}()},
\code{\link{CreateHolidayVariables}()},
\code{\link{DT_GDL_Feature_Engineering}()},
\code{\link{DummifyDT}()},
\code{\link{Estimate_BoxCox_Lambda}()},
\code{\link{Estimate_YeoJohnson_Lambda}()},
\code{\link{H2OAutoencoderScoring}()},
\code{\link{H2OAutoencoder}()},
\code{\link{Interact}()},
\code{\link{InvApply_Asinh}()},
\code{\link{InvApply_Asin}()},
\code{\link{InvApply_BoxCox}()},
\code{\link{InvApply_LogPlus1}()},
\code{\link{InvApply_Logit}()},
\code{\link{InvApply_Log}()},
\code{\link{InvApply_Sqrt}()},
\code{\link{InvApply_YeoJohnson}()},
\code{\link{ModelDataPrep}()},
\code{\link{Partial_DT_GDL_Feature_Engineering2}()},
\code{\link{Partial_DT_GDL_Feature_Engineering}()},
\code{\link{PercRankScoring}()},
\code{\link{PercRank}()},
\code{\link{StandardizeScoring}()},
\code{\link{Standardize}()},
\code{\link{Test_Asinh}()},
\code{\link{Test_Asin}()},
\code{\link{Test_BoxCox}()},
\code{\link{Test_Identity}()},
\code{\link{Test_LogPlus1}()},
\code{\link{Test_Logit}()},
\code{\link{Test_Log}()},
\code{\link{Test_Sqrt}()},
\code{\link{Test_YeoJohnson}()},
\code{\link{TimeSeriesFillRoll}()},
\code{\link{TimeSeriesFill}()}
}
\author{
Adrian Antico
}
\concept{Feature Engineering}
